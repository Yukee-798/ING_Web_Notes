/* ==========CSS样式规则========= */
/* 选择器，声明 */
/* h1为选择器，后面大括号为声明 */
h1 { color:#fff; font-size: 15px; }

/* ==========CSS引用方式========= */

/* 
    1. CSS内联样式：在html的所在标签内添加style属性，如<p style="color:red"></p>
    
    2. CSS内部样式：在html的head标签内加入<style type="text/css"> p {color:#fff;} </style>

    3. CSS外部样式：用一个单独的.css文件根据CSS样式规则写入样式，
       然后在html的head标签引入<link href="XX.css" rel="stylesheet" type="text/css" />

    4. CSS外部导入：在html标签内<style type="text/css"> @import url(css的文件路径) </style>

    5. 区别：详见备忘录

    6. 优先级：使用上述4种方式同时引入样式，优先级为 内联>内部>外部
*/


/* ==========CSS选择器分类========= */

/* 
    1. 标签选择器：以html的标签作为选择器，如：h1 { color:red; }

    2. 类选择器：为html标签后面加入class属性并指定取值，再通过： .类名 {} 来使用样式

    3. ID选择器：为html标签后面加入id属性并指定取值，再通过： #id名 {} 来使用样式

    4. 全局选择器：为html内的所有标签设置对应样式，如：* {}

    5. 群组选择器：多个标签作为选择器，如：h1,h2,h3,p,pre {}

    6. 后代选择器：根据标签的嵌套关系来指定选择器，如：div内有p，p内有input，则 div p input {} 选择器指定的就是该三层嵌套的input

    7. 相邻选择器：同层嵌套关系的标签相邻选择，如 div和p在同一层嵌套中，div+p {} 表示与div相邻的那个p

    8. 伪类选择器：根据某个标签不同的状态来作为选择器，其中有
            :link       未访问的链接状态 （判断网站是否已经访问根据浏览器的历史记录来决定）
            :visited    已访问的链接状态
            :hover      鼠标悬浮的链接状态
            :active     激活的链接状态 (正在点击点击链接，还没有松开)

            链接伪类的顺序：:link > :visited > :hover > :active，必须按照顺序排放才会有相应效果

        例子：a:link {} 为未访问状态的链接设置样式
             a:visited {} 为已访问的链接设置样式
*/

/* =============CSS属性的继承============== */

/* 
    1. concept：父元素的部分css属性可以被子元素继承
*/

/* ============CSS属性的层叠============== */

/* 
    1. concept：样式属性不冲突的时候可以层叠，冲突时按照不同样式规则优先级来应用样式
*/

